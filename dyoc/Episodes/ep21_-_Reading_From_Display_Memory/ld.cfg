# This is taken from https://cc65.github.io/doc/customizing.html
MEMORY
{
   ZP:
      start  $0000
      size   $0100
      type   rw;

   RAM:
      start  $0200
      size   $0E00
      type   rw
      define yes; # Define symbols __RAM_START__ and __RAM_SIZE__

   ROM:
      start  $F800
      size   $0800
      type   ro
      file   "prog/rom.bin";
}

SEGMENTS
{
   ZEROPAGE:
      load     ZP
      type     zp;
   DATA:    # Writeable data that was specifically initialized.
            # The initialized values are stored in ROM, and
            # are copied to RAM at startup.
      load     ROM
      type     rw
      define   yes   # Define symbols __DATA_LOAD__ and __DATA_SIZE__
      run      RAM;  # Define symbol __DATA_RUN__
   BSS:     # Writeable data that is not initialized.
      load     RAM
      type     bss
      define   yes;  # Define symbols __BSS_LOAD__ and __BSS_SIZE__
#   HEAP:
#      load     RAM
#      type     bss
#      optional yes;
   STARTUP:
      load     ROM
      type     ro;
   ONCE:
      load     ROM
      type     ro
      optional yes;
   CODE:    # Read-only code.
      load     ROM
      type     ro;
   RODATA:  # Read-only data.
      load     ROM
      type     ro;
   VECTORS:
      load     ROM
      type     ro
      start    $FFFA;
}

FEATURES {
   CONDES:
      segment  STARTUP
      type     constructor
      label    __CONSTRUCTOR_TABLE__
      count    __CONSTRUCTOR_COUNT__;
   CONDES:
      segment  STARTUP
      type     destructor
      label    __DESTRUCTOR_TABLE__
      count    __DESTRUCTOR_COUNT__;
}

SYMBOLS {
   # Define the stack size for the application
   __STACKSIZE__:
      type     weak
      value    $0200;
}

